commit 727ddcba86ee7fc7b2b4ebb8e5b2d3314cdc9c98
Author: Matthew "strager" Glazar <strager.nds@gmail.com>
Date:   Wed Aug 11 22:12:50 2021 -0700

    Reduce #include bloat (<iostream>)

    Including <iostream> has two problems:

    * Compile times are worse because of over-inclusion
    * Binary sizes are worse when statically linking libstdc++ because
      iostreams cannot be dead-code-stripped

    simdjson only needs std::ostream. Include the header declaring only what
    we need (<ostream>), omitting stuff we don't need (std::cout and its
    initialization, for example).

    This commit should not change behavior, but it might break users who
    assume that including <simdjson/simdjson.h> will make std::cout
    available (such as many of simdjson's own files).

diff --git a/benchmark/bench_dom_api.cpp b/benchmark/bench_dom_api.cpp
index b8f5937b..7224f88c 100644
--- a/benchmark/bench_dom_api.cpp
+++ b/benchmark/bench_dom_api.cpp
@@ -1,4 +1,5 @@
 #include <benchmark/benchmark.h>
+#include <iostream>
 #include "simdjson.h"
 #include <sstream>

diff --git a/benchmark/bench_parse_call.cpp b/benchmark/bench_parse_call.cpp
index 514d4796..d98a5d47 100644
--- a/benchmark/bench_parse_call.cpp
+++ b/benchmark/bench_parse_call.cpp
@@ -1,4 +1,5 @@
 #include <benchmark/benchmark.h>
+#include <iostream>
 #include "simdjson.h"
 using namespace simdjson;
 using namespace benchmark;
diff --git a/fuzz/fuzz_implementations.cpp b/fuzz/fuzz_implementations.cpp
index c1525aa7..bfbe3b1a 100644
--- a/fuzz/fuzz_implementations.cpp
+++ b/fuzz/fuzz_implementations.cpp
@@ -11,6 +11,7 @@
 #include <cstddef>
 #include <cstdint>
 #include <cstdlib>
+#include <iostream>
 #include <string>
 #include <array>
 #include "supported_implementations.h"
diff --git a/fuzz/fuzz_minifyimpl.cpp b/fuzz/fuzz_minifyimpl.cpp
index 444d5030..d8750086 100644
--- a/fuzz/fuzz_minifyimpl.cpp
+++ b/fuzz/fuzz_minifyimpl.cpp
@@ -12,6 +12,7 @@
 #include "simdjson.h"
 #include <cstddef>
 #include <cstdlib>
+#include <iostream>
 #include <vector>
 #include "supported_implementations.h"

diff --git a/fuzz/fuzz_utf8.cpp b/fuzz/fuzz_utf8.cpp
index 397b39a1..d83db7e0 100644
--- a/fuzz/fuzz_utf8.cpp
+++ b/fuzz/fuzz_utf8.cpp
@@ -10,6 +10,7 @@
 #include "simdjson.h"
 #include <cstddef>
 #include <cstdlib>
+#include <iostream>
 #include "supported_implementations.h"

 extern "C" int VerboseTestOneInput(const uint8_t *Data, size_t Size) {
diff --git a/include/simdjson/dom/parsedjson_iterator.h b/include/simdjson/dom/parsedjson_iterator.h
index b5846048..667875a4 100644
--- a/include/simdjson/dom/parsedjson_iterator.h
+++ b/include/simdjson/dom/parsedjson_iterator.h
@@ -5,7 +5,7 @@

 #include <cstring>
 #include <string>
-#include <iostream>
+#include <ostream>
 #include <iterator>
 #include <limits>
 #include <stdexcept>
diff --git a/include/simdjson/internal/jsonformatutils.h b/include/simdjson/internal/jsonformatutils.h
index c87c6445..b30e1c5d 100644
--- a/include/simdjson/internal/jsonformatutils.h
+++ b/include/simdjson/internal/jsonformatutils.h
@@ -2,7 +2,7 @@
 #define SIMDJSON_INTERNAL_JSONFORMATUTILS_H

 #include <iomanip>
-#include <iostream>
+#include <ostream>
 #include <sstream>

 namespace simdjson {
diff --git a/tests/dom/jsoncheck.cpp b/tests/dom/jsoncheck.cpp
index 6c15a007..0d37833b 100644
--- a/tests/dom/jsoncheck.cpp
+++ b/tests/dom/jsoncheck.cpp
@@ -10,6 +10,7 @@

 #include <cstdio>
 #include <cstdlib>
+#include <iostream>

 #include "simdjson.h"

diff --git a/tests/dom/minefieldcheck.cpp b/tests/dom/minefieldcheck.cpp
index cc53096d..50bc4fba 100644
--- a/tests/dom/minefieldcheck.cpp
+++ b/tests/dom/minefieldcheck.cpp
@@ -10,6 +10,7 @@

 #include <cstdio>
 #include <cstdlib>
+#include <iostream>

 #include "simdjson.h"
 /**
diff --git a/tests/dom/numberparsingcheck.cpp b/tests/dom/numberparsingcheck.cpp
index 14a8fb80..6be7e59e 100644
--- a/tests/dom/numberparsingcheck.cpp
+++ b/tests/dom/numberparsingcheck.cpp
@@ -3,6 +3,7 @@
 #include <cmath>
 #include <cstdio>
 #include <cstdlib>
+#include <iostream>

 #ifndef JSON_TEST_NUMBERS
 #define JSON_TEST_NUMBERS
diff --git a/tests/dom/parse_many_test.cpp b/tests/dom/parse_many_test.cpp
index 96affa00..e7bc7143 100644
--- a/tests/dom/parse_many_test.cpp
+++ b/tests/dom/parse_many_test.cpp
@@ -10,6 +10,7 @@

 #include <cstdio>
 #include <cstdlib>
+#include <iostream>

 #include "simdjson.h"

diff --git a/tests/dom/random_string_number_tests.cpp b/tests/dom/random_string_number_tests.cpp
index d269f9a7..af2260b5 100644
--- a/tests/dom/random_string_number_tests.cpp
+++ b/tests/dom/random_string_number_tests.cpp
@@ -4,6 +4,7 @@
 #include <cstdio>
 #include <cstdlib>
 #include <cstdint>
+#include <iostream>
 #include <random>
 #include <climits>
 #include <unistd.h>
@@ -194,4 +195,4 @@ int main(int argc, char *argv[]) {
   }
   std::cout << "Failure." << std::endl;
   return EXIT_FAILURE;
-}
\ No newline at end of file
+}
diff --git a/tests/ondemand/test_ondemand.h b/tests/ondemand/test_ondemand.h
index 3ddec316..2ef2e8a7 100644
--- a/tests/ondemand/test_ondemand.h
+++ b/tests/ondemand/test_ondemand.h
@@ -1,6 +1,7 @@
 #ifndef ONDEMAND_TEST_ONDEMAND_H
 #define ONDEMAND_TEST_ONDEMAND_H

+#include <iostream>
 #include <unistd.h>
 #include "simdjson.h"
 #include "cast_tester.h"
diff --git a/tests/test_macros.h b/tests/test_macros.h
index 322e4a5b..80472458 100644
--- a/tests/test_macros.h
+++ b/tests/test_macros.h
@@ -1,6 +1,8 @@
 #ifndef TEST_MACROS_H
 #define TEST_MACROS_H

+#include <iostream>
+
 #ifndef SIMDJSON_BENCHMARK_DATA_DIR
 #define SIMDJSON_BENCHMARK_DATA_DIR "jsonexamples/"
 #endif
@@ -121,4 +123,4 @@ simdjson_really_inline bool assert_iterate_error(T &arr, simdjson::error_code ex
 #define TEST_FAIL(MESSAGE)              do { std::cerr << "FAIL: " << (MESSAGE) << std::endl; return false; } while (0);
 #define TEST_SUCCEED()                  do { return true; } while (0);

-#endif // TEST_MACROS_H
\ No newline at end of file
+#endif // TEST_MACROS_H
diff --git a/tests/unicode_tests.cpp b/tests/unicode_tests.cpp
index 065f4ef9..47e9410c 100644
--- a/tests/unicode_tests.cpp
+++ b/tests/unicode_tests.cpp
@@ -1,6 +1,7 @@
 #include "simdjson.h"
 #include <cstddef>
 #include <cstdint>
+#include <iostream>
 #include <random>

 class RandomUTF8 final {
